buildscript{
    repositories{
        mavenCentral()
        maven{
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven{
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies{
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.2'
}

apply plugin: 'forge'
apply plugin: 'maven-publish'
apply plugin: 'curseforge'

group = "chylex.javacheck"

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') == null ? "CUSTOM" : System.getenv('BUILD_NUMBER')
version = "UNIVERSAL-${mod_version}.${buildnumber}"

minecraft{
    version = "${mc_version}-${forge_version}-${mc_version}"
    runDir = "eclipse"
}

task java7Jar(type: Jar, dependsOn: "jar"){
    from sourceSets.main.output
    
    manifest{
        attributes 'TweakClass': 'chylex.javacheck.Java7Checker'
    }
    
    archivesBaseName = "Java7Checker"
}

task java8Jar(type: Jar, dependsOn: "jar"){
    from sourceSets.main.output
    
    manifest{
        attributes 'TweakClass': 'chylex.javacheck.Java8Checker'
    }
    
    archivesBaseName = "Java8Checker"
}

task shadeJar(type: Jar, dependsOn: "jar"){
    from sourceSets.main.output
    
    archivesBaseName = "JavaCheckerShade"
}

jar.enabled = false

reobf{
    reobf java7Jar{ classpath -> classpath = configurations.compile }
    reobf java8Jar{ classpath -> classpath = configurations.compile }
    reobf shadeJar{ classpath -> classpath = configurations.compile }
}

reobf.enabled = false

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    
    from(sourceSets.main.resources.srcDirs){
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    from(sourceSets.main.resources.srcDirs){
        exclude 'mcmod.info'
    }
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact shadeJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}
